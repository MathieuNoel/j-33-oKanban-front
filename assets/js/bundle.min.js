!function(){var e={base_url:"http://localhost:3000",hideModals:function(){const e=document.getElementsByClassName("modal");for(const t of e)t.classList.remove("is-active")}};const t={makeLabelInDOM:function(e){console.log(e);const a=document.createElement("span");a.textContent=e.title,a.style.backgroundColor=e.color,a.dataset.labelId=e.id,a.classList.add("tag");const o=document.querySelector(`.box[data-card-id="${e.card_has_label.card_id}"]`);a.addEventListener("dblclick",t.dissociateTagFromCard),o.querySelector(".tags").appendChild(a)},dissociateTagFromCard:async function(t){const a=t.target.closest(".box").dataset.cardId,o=t.target.dataset.labelId;try{const s=await fetch(`${e.base_url}/cards/${a}/label/${o}`,{method:"DELETE"}),r=await s.json();if(!s.ok)throw r;t.target.remove()}catch(s){alert("Impossible de dissocier le tag de sa carte !"),console.error(s)}},showAssociateTagToCardModal:async function(t){const a=document.querySelector("#addTagToCardModal");a.classList.add("is-active");const o=t.target.closest(".box");a.querySelector('input[name="card_id"]').value=o.dataset.cardId;try{const t=await fetch(e.base_url+"/labels"),s=await t.json();if(!t.ok)throw s;o.querySelectorAll(".tag");const r=a.querySelector('select[name="tags"]');r.textContent="";for(const e of s){const t=document.createElement("option");t.value=e.id,t.textContent=e.title,r.appendChild(t)}}catch(s){alert("Impossible de r\xe9cup\xe9rer les labels !"),console.error(s)}},handleAssociateLabelForm:async function(a){a.preventDefault();const o=new FormData(a.target);try{const a=await fetch(`${e.base_url}/cards/${o.get("card_id")}/label/${o.get("tags")}`,{method:"POST"}),s=await a.json();if(!a.ok)throw s;const r=s.labels.find(e=>e.id===Number(o.get("tags")));t.makeLabelInDOM(r),e.hideModals()}catch(s){alert("Impossible d'associer un tag \xe0 sa carte !"),console.error(s)}}};var a=t;const o={showAddCardModal:function(e){const t=e.target.closest(".panel").dataset.listId;document.querySelector('#addCardModal input[name="list_id"]').value=t,document.getElementById("addCardModal").classList.add("is-active")},handleAddCardForm:async function(t){t.preventDefault();const a=new FormData(t.target),s=await fetch(e.base_url+"/cards",{method:"POST",body:a}),r=await s.json();o.makeCardInDOM(r),t.target.reset(),e.hideModals()},makeCardInDOM:function(e){const t=document.getElementById("templateCard"),s=document.importNode(t.content,!0),r=s.querySelector(".box");r.dataset.cardId=e.id,s.querySelector(".column").textContent=e.title,r.style.backgroundColor=e.color,r.querySelector(".edit-card-icon").addEventListener("click",o.showEditCardForm),r.querySelector(".delete-card-icon").addEventListener("click",o.deleteCard);const d=r.querySelector(".edit-card-form");d.addEventListener("submit",o.handleEditCardForm),r.querySelector(".associate-tag-icon").addEventListener("click",a.showAssociateTagToCardModal),d.querySelector('input[name="card-id"]').value=e.id,document.querySelector(`.panel[data-list-id="${e.list_id}"]`).querySelector(".panel-block").appendChild(s)},showEditCardForm:function(e){const t=e.target.closest(".box");t.querySelector(".card-title").classList.add("is-hidden"),t.querySelector(".edit-card-form").classList.remove("is-hidden")},handleEditCardForm:async function(t){t.preventDefault();const a=new FormData(t.target),o=t.target.previousElementSibling;try{const s=await fetch(`${e.base_url}/cards/${a.get("card-id")}`,{method:"PATCH",body:a}),r=await s.json();if(!s.ok)throw r;o.textContent=r.title,t.target.closest(".box").style.backgroundColor=r.color}catch(s){alert("Impossible de modifier la carte !"),console.error(s)}t.target.classList.add("is-hidden"),o.classList.remove("is-hidden")},deleteCard:async function(t){const a=t.target.closest(".box");try{const t=await fetch(`${e.base_url}/cards/${a.dataset.cardId}`,{method:"DELETE"}),o=await t.json();if(!t.ok)throw o;a.remove()}catch(o){alert("Impossible de supprimer cette carte !"),console.error(o)}},dragCard:function(e){const t=e.from;let a=t.closest(".panel").dataset.listId,s=t.querySelectorAll(".box");if(o.updateAllCards(s,a),t===e.to)return;const r=e.to;s=r.querySelectorAll(".box"),a=r.closest(".panel").dataset.listId,o.updateAllCards(s,a)},updateAllCards:function(t,a){t.forEach(async(t,o)=>{const s=new FormData;s.set("position",o),s.set("list_id",a);try{const a=await fetch(`${e.base_url}/cards/${t.dataset.cardId}`,{method:"PATCH",body:s}),o=await a.json();if(!a.ok)throw o}catch(r){alert("Impossible de d\xe9placer la carte !"),console.error(r)}})}};var s=o;const r={showAddListModal:function(){document.getElementById("addListModal").classList.add("is-active")},handleAddListForm:async function(t){t.preventDefault();const a=new FormData(t.target);try{const t=await fetch(e.base_url+"/lists",{method:"POST",body:a}),o=await t.json();r.makeListInDOM(o)}catch(o){console.error(o),alert("Impossible d'ajouter une liste !")}t.target.reset(),e.hideModals()},makeListInDOM:function(e){const t=document.getElementById("templateList"),a=document.importNode(t.content,!0);a.querySelector(".panel").dataset.listId=e.id;const o=a.querySelector(".edit-list-form");o.querySelector('input[name="list-id"]').value=e.id;const d=a.querySelector("h2");d.textContent=e.name,d.addEventListener("dblclick",r.showEditListForm),o.addEventListener("submit",r.handleEditListForm),a.querySelector(".add-list-icon").addEventListener("click",s.showAddCardModal),a.querySelector(".delete-list-icon").addEventListener("click",r.deleteList);const n=a.querySelector(".panel-block");new Sortable(n,{group:"list",draggable:".box",onEnd:s.dragCard}),document.querySelector(".card-lists").appendChild(a)},showEditListForm:function(e){e.target.classList.add("is-hidden"),e.target.nextElementSibling.classList.remove("is-hidden")},handleEditListForm:async function(t){t.preventDefault();const a=new FormData(t.target),o=t.target.previousElementSibling;try{const t=await fetch(`${e.base_url}/lists/${a.get("list-id")}`,{method:"PATCH",body:a}),s=await t.json();if(!t.ok)throw s;o.textContent=s.name}catch(s){alert("Impossible de modifier la liste !"),console.error(s)}o.classList.remove("is-hidden"),t.target.classList.add("is-hidden")},deleteList:async function(t){if(!confirm("Voulez-vous vraiment supprimer cette liste ?"))return;const a=t.target.closest(".panel");try{const t=await fetch(`${e.base_url}/lists/${a.dataset.listId}`,{method:"DELETE"}),o=await t.json();if(!t.ok)throw o;a.remove()}catch(o){alert("Impossible de supprimer la liste !"),console.error(o)}},dragList:function(t){document.querySelectorAll(".panel").forEach(async(t,a)=>{const o=new FormData;o.set("position",a),await fetch(`${e.base_url}/lists/${t.dataset.listId}`,{method:"PATCH",body:o})})}};var d=r,n={init:function(){n.getListsFromAPI(),n.addListenerToActions()},addListenerToActions:function(){document.getElementById("addListButton").addEventListener("click",d.showAddListModal);const t=document.getElementsByClassName("close");for(const a of t)a.addEventListener("click",e.hideModals);document.querySelector("#addListModal form").addEventListener("submit",d.handleAddListForm),document.querySelector("#addCardModal form").addEventListener("submit",s.handleAddCardForm),document.querySelector("#addTagToCardModal form").addEventListener("submit",a.handleAssociateLabelForm)},getListsFromAPI:async function(){try{const t=await fetch(e.base_url+"/lists"),o=await t.json();console.log(o);for(const e of o){d.makeListInDOM(e);for(const t of e.cards){s.makeCardInDOM(t);for(const e of t.labels)a.makeLabelInDOM(e)}}const r=document.querySelector(".card-lists");new Sortable(r,{draggable:".panel",onEnd:d.dragList})}catch(t){console.error(t),alert("Impossible de r\xe9cup\xe9rer les listes !")}}};document.addEventListener("DOMContentLoaded",n.init)}();